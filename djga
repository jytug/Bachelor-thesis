END(3)                             Linux Programmer's Manual                            END(3)



NNAAMMEE
       etext, edata, end - end of program segments

SSYYNNOOPPSSIISS
       eexxtteerrnn _e_t_e_x_t;;
       eexxtteerrnn _e_d_a_t_a;;
       eexxtteerrnn _e_n_d;;

DDEESSCCRRIIPPTTIIOONN
       The addresses of these symbols indicate the end of various program segments:

       _e_t_e_x_t  This is the first address past the end of the text segment (the program code).

       _e_d_a_t_a  This is the first address past the end of the initialized data segment.

       _e_n_d    This  is  the first address past the end of the uninitialized data segment (also
              known as the BSS segment).

CCOONNFFOORRMMIINNGG TTOO
       Although these symbols have long been provided on most UNIX systems, they are not stan‐
       dardized; use with caution.

NNOOTTEESS
       The  program  must explicitly declare these symbols; they are not defined in any header
       file.

       On some systems the names of these symbols are preceded by underscores,  thus:  ___e_t_e_x_t,
       ___e_d_a_t_a, and ___e_n_d.  These symbols are also defined for programs compiled on Linux.

       At  the start of program execution, the program break will be somewhere near _&_e_n_d (per‐
       haps at the start of the following page).  However, the break will change as memory  is
       allocated  via  bbrrkk(2)  or mmaalllloocc(3).  Use ssbbrrkk(2) with an argument of zero to find the
       current value of the program break.

EEXXAAMMPPLLEE
       When run, the program below produces output such as the following:

           $ ..//aa..oouutt
           First address past:
               program text (etext)       0x8048568
               initialized data (edata)   0x804a01c
               uninitialized data (end)   0x804a024

   PPrrooggrraamm ssoouurrccee

       #include <stdio.h>
       #include <stdlib.h>

       extern char etext, edata, end; /* The symbols must have some type,
                                          or "gcc -Wall" complains */

       int
       main(int argc, char *argv[])
       {
           printf("First address past:\n");
           printf("    program text (etext)      %10p\n", &etext);
           printf("    initialized data (edata)  %10p\n", &edata);
           printf("    uninitialized data (end)  %10p\n", &end);

           exit(EXIT_SUCCESS);
       }

SSEEEE AALLSSOO
       oobbjjdduummpp(1), rreeaaddeellff(1), ssbbrrkk(2), eellff(5)

CCOOLLOOPPHHOONN
       This page is part of release 3.74 of the Linux _m_a_n_-_p_a_g_e_s project.  A description of the
       project,  information about reporting bugs, and the latest version of this page, can be
       found at http://www.kernel.org/doc/man-pages/.



GNU                                       2008-07-17                                    END(3)
